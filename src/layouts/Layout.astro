---
// import { BackgroundGrid } from '@components';
import { BackgroundGrid } from '@/components/index.astro';
import { getLangFromUrl } from '../i18n/utils';
import '@fontsource-variable/syne';

// import { ThemeProvider } from '@material-tailwind/react';

// import { currentScheme } from 'store/schemeStore';

interface Props {
  title: string;
}

const { title } = Astro.props;
const lang = getLangFromUrl(Astro.url);

// const isDark = currentScheme.get() === 'dark';
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
  </head>

  <!-- <ThemeProvider> -->
    <body class="bg-white dark:bg-dark">
      <slot />
      <BackgroundGrid />
      <!-- <BackgroundGrid /> -->
    </body>
  <!-- </ThemeProvider> -->
  <style is:global>
    body {
      scrollbar-gutter: stable both-edges;
      font-family: 'Syne Variable', sans-serif;
      min-height: 100dvh;
    }
  </style>
</html>

<!-- <script is:inline>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.body.classList.remove('bg-dark');
  } else {
    document.body.classList.add('bg-dark');
  }
  window.localStorage.setItem('theme', theme);
</script> -->
