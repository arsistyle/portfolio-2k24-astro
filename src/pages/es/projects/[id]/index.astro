---
import type { Langs, ProjectFromImport, ProjectMDXContent, ProjectMDXGlobResult } from "@/types"

import { getLangFromUrl, useTranslatedPath, useTranslations } from "@/i18n/utils"

import { HeaderPage } from "@/components/ui/index.astro"
import Layout from "@/layouts/Layout.astro"
import ProjectDetail from "@/components/sections/ProjectDetail.astro"

export async function getStaticPaths() {
	const lang: Langs = "es"
	const projectFiles = (await import.meta.glob<ProjectMDXContent>("@/content/projects/**/*.mdx", {
		eager: true,
	})) as ProjectMDXGlobResult

	const projectList: ProjectFromImport[] = Object.values(projectFiles)
		.filter(
			(project): project is ProjectMDXContent & { frontmatter: { lang: Langs } } =>
				project.frontmatter.lang === lang
		)
		.map(({ frontmatter: { lang, name, title, category, images, description }, Content }) => ({
			lang,
			name,
			title,
			category,
			images,
			description,
			Content,
		}))

	return projectList.map((post) => {
		return {
			params: { id: post.name },
			props: { post },
		}
	})
}

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
const translatePath = useTranslatedPath(lang)
const { post } = Astro.props
const { title, name } = post

const breadcrumbs = [
	{
		name: t("nav.home"),
		type: "link",
		url: translatePath("/"),
	},
	{
		type: "separator",
	},
	{
		name: t("nav.projects"),
		type: "link",
		url: translatePath("/projects"),
	},
	{
		type: "separator",
	},
	{
		name: title,
		type: "current",
	},
]
---

<Layout title={`Israel Larrondo | ${title}`}>
	<div class="dark:bg-dark relative z-10 bg-white">
		<HeaderPage title={title} {breadcrumbs} name={name} />
		<ProjectDetail project={post} />
	</div>
</Layout>
