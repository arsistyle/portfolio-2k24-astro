---
import type { Langs, ProductFromImport, ProductMDXContent, ProductMDXGlobResult } from "@/types"

import { getLangFromUrl, useTranslatedPath, useTranslations } from "@/i18n/utils"

import { HeaderPage } from "@/components/ui/index.astro"
import Layout from "@/layouts/Layout.astro"
import ProductDetail from "@/components/sections/ProductDetail.astro"

export async function getStaticPaths() {
	const lang: Langs = "en"
	const productFiles = (await import.meta.glob<ProductMDXContent>("@/content/products/**/*.json", {
		eager: true,
	})) as ProductMDXGlobResult

	const productList: ProductFromImport[] = Object.values(productFiles)
		.filter(
			(product): product is ProductMDXContent & { default: { lang: Langs } } =>
				product.default.lang === lang
		)
		.map(
			({
				default: {
					name,
					title,
					category,
					thumbnail,
					gallery,
					description,
					price,
					paymentMethods,
					lang,
				},
				Content,
			}) => ({
				name,
				title,
				category,
				thumbnail,
				gallery,
				description,
				price,
				paymentMethods,
				lang,
				Content,
			})
		)

	return productList.map((post) => {
		return {
			params: { id: post.name },
			props: { post },
		}
	})
}

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
const translatePath = useTranslatedPath(lang)
const { post } = Astro.props
const { title, name } = post

const breadcrumbs = [
	{
		name: t("nav.home"),
		type: "link",
		url: translatePath("/"),
	},
	{
		type: "separator",
	},
	{
		name: t("nav.shop"),
		type: "link",
		url: translatePath("/shop"),
	},
	{
		type: "separator",
	},
	{
		name: title,
		type: "current",
	},
]
---

<Layout title={`Israel Larrondo | ${title}`}>
	<div class="dark:bg-dark relative z-10 bg-white">
		<HeaderPage {breadcrumbs} name={name} />
		<ProductDetail product={post} />
	</div>
</Layout>
