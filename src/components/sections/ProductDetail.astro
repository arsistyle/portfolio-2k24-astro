---
import { Image } from "astro:assets";
import { Button, Typography } from "../index.astro";
import { BsPaypal } from "react-icons/bs";
import { SiGumroad } from "react-icons/si";
import type { Product, ProductPaymentButtons } from "../../types";

import Gallery from "../core/Gallery/index.astro";

const { product } = Astro.props;
const {
  thumbnail,
  title,
  name,
  description,
  paymentMethods,
  gallery,
}: Product = product || {};

const paymentButtons: ProductPaymentButtons = {
  paypal: {
    className: "bg-[#122c82]",
    color: "light",
    icon: BsPaypal,
  },
  gumroad: {
    className: "bg-[#CC73BA]",
    color: "dark",
    icon: SiGumroad,
  },
};
---

<section class="flex items-center justify-center px-5 py-14 md:pb-40">
  <div class="container">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-12 md:gap-20 mb-20">
      <div class="relative">
        <Image
          src={thumbnail}
          alt={title}
          class="w-full h-full object-cover rounded-4xl pointer-events-none"
          transition:name={`product-image-${name}`}
          width={1920}
          height={1080}
        />
      </div>
      <div class="relative">
        <div class="flex flex-col gap-6 sticky top-[100px]">
          <Typography
            type="h1"
            class="dark:text-white text-balance"
            transition:name={`product-title-${name}`}
          >
            {title}
          </Typography>
          {
            description && (
              <Typography
                type="p"
                class="dark:text-white text-balance highlight"
                transition:name={`product-description-${name}`}
              >
                {description}
              </Typography>
            )
          }
          {
            paymentMethods.length ? (
              <div class="flex flex-wrap gap-4 pt-4">
                {paymentMethods.map(({ paymentName, name, url }) => {
                  const Icon = paymentButtons[paymentName]?.icon;
                  return (
                    <Button
                      tag="a"
                      href={url}
                      size="lg"
                      class={`button ${paymentButtons[paymentName]?.className}`}
                      color={paymentButtons[paymentName]?.color}
                    >
                      <span slot="startIcon">{Icon && <Icon />}</span>
                      {name}
                    </Button>
                  );
                })}
              </div>
            ) : null
          }
        </div>
      </div>
    </div>
    {
      gallery.length ? (
        <Gallery
          images={gallery}
          className="grid grid-cols-2 md:grid-cols-4 gap-4 w-full"
          imageClassName="aspect-square"
        />
      ) : null
    }
  </div>
</section>
